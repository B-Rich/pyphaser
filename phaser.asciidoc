PyPhaser -- A lightweight Pipeline framework for phased execution
-----------------------------------------------------------------

Lightweight framework for phased execution of tasks. The term *phased* means,
that an application is split logically into distinct and possibly dependent
phases of execution. The key idea is that `Phaser` allows you to execute
*phases* from the command line and allows you to resume an application from a
given phase. This is particularly helpful in research environments where the
phases may be brittle such that sometimes manual intervention and resuming a
pipeline may be required.

A *phase* is implemented as a subclass of `phaser.phase`, where the following
methods two methods must be implemented:

    execute              <---- execute phase for a single item
    iter                 <---- returns a list of items for execute

The following methods can be implemented to provide for additional robustness:

    precondition         <---- check preconditions
    preexec              <---- things to execute before starting
    postexec             <---- things to execute after finishing
    postcondition        <---- check postconditions

Usage Example
-------------

See the `example.py` which implements the famous `Hello World!` as a phased
application. It consits of two phases: `Hello` and `World`, which both print a
part of the desired string. The two classes are implemented such that they
contain a list of characters to print, where `execute` will print a charcter
and `iter` will return each charter in turn.

    zsh» ./example -h
    Usage: example [options]

    Options:
    -h, --help            show this help message and exit
    -d, --display-all     display all available phases, in order
    -s phase, --single=phase
                            execute a single phase

    zsh» ./example -d
    Available Phases
    ----------------
    0) Hello:     Print 'Hello ' 
    1) World:     Print 'World!' 

    zsh» ./example -a
    Hello World!

    zsh» ./example -s Hello
    Hello

    zsh» ./example -s World
    World!

Author, Copyright and License
-----------------------------

(C) 2012 Valentin Haenel `<valentin.haenel@gmx.de>`

PyPhaser is licensed under the terms of the MIT License.

Permission is hereby granted, free of charge, to any person obtaining a copy of
this software and associated documentation files (the "Software"), to deal in
the Software without restriction, including without limitation the rights to
use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies
of the Software, and to permit persons to whom the Software is furnished to do
so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
